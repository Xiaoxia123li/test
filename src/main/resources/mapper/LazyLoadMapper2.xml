<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fix.dao.LazyLoadDao2">
	<!-- resultMap可以用来描述从数据库结果集中来加载对象 在Mapper中定义resultMap来解决映射问题 id是resultMap的唯一标识符 -->
	<!-- type属性指明了这个resultMap它对应的是哪个JavaBean -->
	<!-- resultMap节点 id表示哪个字段代表这主键， -->
	<!-- property表示JavaBean-实体类中的属性名称，column表示数据库中的字段名称，javaType代表JavaBean中该属性的类型，jdbcType则表示数据库中该字段的类型 -->
	<!--<resultMap id="MyUser" type="User">
		<id property="userId" column="userId" />
		<result property="nickName" column="nickName" />
		<collection property="infoList" ofType="Plan" select="findPlan" column="userId"></collection>
	</resultMap>
	
	-->
	<resultMap id="MyPlan" type="Plan">
		<id property="planId" column="planId" />
		<result property="title" column="title" />
		<result property="motivation" column="motivation" />
		<result property="endDays" column="endDays" />
		<association property="customer" javaType="User" select="findUser" column="userId"></association>
	</resultMap>

	<!-- id = method name; result type = entity type, object -->
	<!--<select id="getUserInfo" resultMap="MyUser">
		Select * from users
	</select>-->
	<!-- （resultType）使用resultType进行输出映射，只有查询出来的列名和pojo中的属性名一致，该列才可以映射成功, result map 可自定义 -->
	<!--<select id="findPlan" resultType="Plan">
		Select * from plans where userId=#{value}
	</select>-->


	<!-- mul-1 -->
	
	<select id="getPlanInfo" resultMap="MyPlan">
		Select * from  plans	
	</select>
	<select id="findUser" resultType="User">	
		Select * from users where userId=#{uid}
	</select>


</mapper>